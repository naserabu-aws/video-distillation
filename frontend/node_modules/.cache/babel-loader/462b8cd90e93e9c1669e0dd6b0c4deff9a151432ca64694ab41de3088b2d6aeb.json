{"ast":null,"code":"import { setFeature } from \"@aws-sdk/core\";\nimport { RequestChecksumCalculation, ResponseChecksumValidation } from \"./constants\";\nexport const flexibleChecksumsInputMiddlewareOptions = {\n  name: \"flexibleChecksumsInputMiddleware\",\n  toMiddleware: \"serializerMiddleware\",\n  relation: \"before\",\n  tags: [\"BODY_CHECKSUM\"],\n  override: true\n};\nexport const flexibleChecksumsInputMiddleware = (config, middlewareConfig) => (next, context) => async args => {\n  const input = args.input;\n  const {\n    requestValidationModeMember\n  } = middlewareConfig;\n  const requestChecksumCalculation = await config.requestChecksumCalculation();\n  const responseChecksumValidation = await config.responseChecksumValidation();\n  switch (requestChecksumCalculation) {\n    case RequestChecksumCalculation.WHEN_REQUIRED:\n      setFeature(context, \"FLEXIBLE_CHECKSUMS_REQ_WHEN_REQUIRED\", \"a\");\n      break;\n    case RequestChecksumCalculation.WHEN_SUPPORTED:\n      setFeature(context, \"FLEXIBLE_CHECKSUMS_REQ_WHEN_SUPPORTED\", \"Z\");\n      break;\n  }\n  switch (responseChecksumValidation) {\n    case ResponseChecksumValidation.WHEN_REQUIRED:\n      setFeature(context, \"FLEXIBLE_CHECKSUMS_RES_WHEN_REQUIRED\", \"c\");\n      break;\n    case ResponseChecksumValidation.WHEN_SUPPORTED:\n      setFeature(context, \"FLEXIBLE_CHECKSUMS_RES_WHEN_SUPPORTED\", \"b\");\n      break;\n  }\n  if (requestValidationModeMember && !input[requestValidationModeMember]) {\n    if (responseChecksumValidation === ResponseChecksumValidation.WHEN_SUPPORTED) {\n      input[requestValidationModeMember] = \"ENABLED\";\n    }\n  }\n  return next(args);\n};","map":{"version":3,"names":["setFeature","RequestChecksumCalculation","ResponseChecksumValidation","flexibleChecksumsInputMiddlewareOptions","name","toMiddleware","relation","tags","override","flexibleChecksumsInputMiddleware","config","middlewareConfig","next","context","args","input","requestValidationModeMember","requestChecksumCalculation","responseChecksumValidation","WHEN_REQUIRED","WHEN_SUPPORTED"],"sources":["/Users/naserabu/Desktop/video distillation/frontend/node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/flexibleChecksumsInputMiddleware.js"],"sourcesContent":["import { setFeature } from \"@aws-sdk/core\";\nimport { RequestChecksumCalculation, ResponseChecksumValidation } from \"./constants\";\nexport const flexibleChecksumsInputMiddlewareOptions = {\n    name: \"flexibleChecksumsInputMiddleware\",\n    toMiddleware: \"serializerMiddleware\",\n    relation: \"before\",\n    tags: [\"BODY_CHECKSUM\"],\n    override: true,\n};\nexport const flexibleChecksumsInputMiddleware = (config, middlewareConfig) => (next, context) => async (args) => {\n    const input = args.input;\n    const { requestValidationModeMember } = middlewareConfig;\n    const requestChecksumCalculation = await config.requestChecksumCalculation();\n    const responseChecksumValidation = await config.responseChecksumValidation();\n    switch (requestChecksumCalculation) {\n        case RequestChecksumCalculation.WHEN_REQUIRED:\n            setFeature(context, \"FLEXIBLE_CHECKSUMS_REQ_WHEN_REQUIRED\", \"a\");\n            break;\n        case RequestChecksumCalculation.WHEN_SUPPORTED:\n            setFeature(context, \"FLEXIBLE_CHECKSUMS_REQ_WHEN_SUPPORTED\", \"Z\");\n            break;\n    }\n    switch (responseChecksumValidation) {\n        case ResponseChecksumValidation.WHEN_REQUIRED:\n            setFeature(context, \"FLEXIBLE_CHECKSUMS_RES_WHEN_REQUIRED\", \"c\");\n            break;\n        case ResponseChecksumValidation.WHEN_SUPPORTED:\n            setFeature(context, \"FLEXIBLE_CHECKSUMS_RES_WHEN_SUPPORTED\", \"b\");\n            break;\n    }\n    if (requestValidationModeMember && !input[requestValidationModeMember]) {\n        if (responseChecksumValidation === ResponseChecksumValidation.WHEN_SUPPORTED) {\n            input[requestValidationModeMember] = \"ENABLED\";\n        }\n    }\n    return next(args);\n};\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,0BAA0B,EAAEC,0BAA0B,QAAQ,aAAa;AACpF,OAAO,MAAMC,uCAAuC,GAAG;EACnDC,IAAI,EAAE,kCAAkC;EACxCC,YAAY,EAAE,sBAAsB;EACpCC,QAAQ,EAAE,QAAQ;EAClBC,IAAI,EAAE,CAAC,eAAe,CAAC;EACvBC,QAAQ,EAAE;AACd,CAAC;AACD,OAAO,MAAMC,gCAAgC,GAAGA,CAACC,MAAM,EAAEC,gBAAgB,KAAK,CAACC,IAAI,EAAEC,OAAO,KAAK,MAAOC,IAAI,IAAK;EAC7G,MAAMC,KAAK,GAAGD,IAAI,CAACC,KAAK;EACxB,MAAM;IAAEC;EAA4B,CAAC,GAAGL,gBAAgB;EACxD,MAAMM,0BAA0B,GAAG,MAAMP,MAAM,CAACO,0BAA0B,CAAC,CAAC;EAC5E,MAAMC,0BAA0B,GAAG,MAAMR,MAAM,CAACQ,0BAA0B,CAAC,CAAC;EAC5E,QAAQD,0BAA0B;IAC9B,KAAKhB,0BAA0B,CAACkB,aAAa;MACzCnB,UAAU,CAACa,OAAO,EAAE,sCAAsC,EAAE,GAAG,CAAC;MAChE;IACJ,KAAKZ,0BAA0B,CAACmB,cAAc;MAC1CpB,UAAU,CAACa,OAAO,EAAE,uCAAuC,EAAE,GAAG,CAAC;MACjE;EACR;EACA,QAAQK,0BAA0B;IAC9B,KAAKhB,0BAA0B,CAACiB,aAAa;MACzCnB,UAAU,CAACa,OAAO,EAAE,sCAAsC,EAAE,GAAG,CAAC;MAChE;IACJ,KAAKX,0BAA0B,CAACkB,cAAc;MAC1CpB,UAAU,CAACa,OAAO,EAAE,uCAAuC,EAAE,GAAG,CAAC;MACjE;EACR;EACA,IAAIG,2BAA2B,IAAI,CAACD,KAAK,CAACC,2BAA2B,CAAC,EAAE;IACpE,IAAIE,0BAA0B,KAAKhB,0BAA0B,CAACkB,cAAc,EAAE;MAC1EL,KAAK,CAACC,2BAA2B,CAAC,GAAG,SAAS;IAClD;EACJ;EACA,OAAOJ,IAAI,CAACE,IAAI,CAAC;AACrB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}